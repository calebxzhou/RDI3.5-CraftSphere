buildscript {
	repositories {
		google()
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20"
	}
}
plugins {
	// replace `<...>` with the plugin name
		id 'org.jetbrains.kotlin.jvm' version '1.7.20'
	id 'maven-publish'
	id "java-library"
	alias libs.plugins.quilt.loom
	alias libs.plugins.quilt.loom.quiltflower
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {

	mavenCentral()

	maven {url="https://maven.enginehub.org/repo/"}
	maven { url "https://maven.dblsaiko.net/" }
	maven { url "https://maven.fabricmc.net/" }
	maven { url 'https://maven.blamejared.com' }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases' }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url "https://ladysnake.jfrog.io/artifactory/mods" }
	maven { url = "https://dvs1.progwml6.com/files/maven/" }
	maven { url = "https://modmaven.dev" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url 'https://masa.dy.fi/maven' }
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	gradlePluginPortal()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
	google()
}
configurations {
	//includeModImplementation
	includeImplementation

	include.extendsFrom includeImplementation
	//include.extendsFrom includeModImplementation

	implementation.extendsFrom includeImplementation
	//modImplementation.extendsFrom includeModImplementation
}
//不用mc自带的apache http，一会引入一个新版的
configurations.implementation {
	exclude group: 'org.apache.httpcomponents', module: 'httpclient'
	exclude group: 'org.apache.httpcomponents', module: 'httpcore'
}
dependencies {

	minecraft libs.minecraft
	mappings loom.layered {
		mappings "org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2"
		officialMojangMappings() // Uncomment if you want to use Mojang mappings as your primary mappings, falling back on QM for parameters and Javadocs
		parchment("org.parchmentmc.data:parchment-1.19.2:2022.10.16@zip")
	}
	modImplementation libs.quilt.loader
// https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
	// https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	// Quilted Fabric API will automatically pull in the correct QSL version.
	modImplementation libs.quilted.fabric.api
	// modImplementation libs.bundles.quilted.fabric.api // If you wish to use Fabric API's deprecated modules, you can replace the above line with this one
	//新版的 http client okhttp，载入到mod包里
	// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
	includeImplementation( 'com.squareup.okhttp3:okhttp:4.10.0' )
	includeImplementation( 'com.squareup.okio:okio:3.0.0' )
	includeImplementation( 'com.squareup.okio:okio-jvm:3.0.0' )
	// https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine
	includeImplementation 'com.github.ben-manes.caffeine:caffeine:3.1.1'
	// https://mvnrepository.com/artifact/org.lwjgl/lwjgl-openal

	// https://mvnrepository.com/artifact/org.joml/joml
	includeImplementation( 'org.joml:joml:1.10.5' )
	// https://mvnrepository.com/artifact/org.bytedeco/javacv
	includeImplementation("org.bytedeco:javacv:1.5.7")

	modImplementation("maven.modrinth:lithium:mc1.19.2-0.8.3")
	modImplementation("maven.modrinth:sodium:mc1.19.2-0.4.4")
	modImplementation("maven.modrinth:sodium-extra:mc1.19.2-0.4.10")
	modImplementation("maven.modrinth:reeses-sodium-options:mc1.19.2-1.4.7")
	modImplementation("maven.modrinth:lazydfu:0.1.3")
	modImplementation("maven.modrinth:ferrite-core:5.0.0-fabric")
	modImplementation("maven.modrinth:modmenu:4.0.6")
	modImplementation("maven.modrinth:wthit:quilt-5.12.0")

	modImplementation("maven.modrinth:badpackets:fabric-0.2.0")

	//dashloader，提高载入速度
	modImplementation("maven.modrinth:dashloader:4.1.3+1.19")
	modImplementation("net.fabricmc:fabric-language-kotlin:1.8.4+kotlin.1.7.20")

	implementation 'dev.quantumfusion:Taski:1.1.0'
	implementation 'dev.quantumfusion:Hyphen:0.2.2'
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4')
	implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4')
	testImplementation 'org.jetbrains.kotlin:kotlin-test'
	//world edit
	//modImplementation("curse.maven:project-225608:3922622")
	//-------------------
}
test {
	useJUnitPlatform()
}
processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
loom {
	accessWidenerPath = file("src/main/resources/rdict3.accesswidener")
}
